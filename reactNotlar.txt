--kurulum--
nodejs kur.
React Developer Tool chrome eklentisi
Redux Developer Tool chrome eklentisi
Auto rename tag,bracket pair colorizer,ESLint,Prettier Code formatter
vs.code eklenti olarak Live Server, ES7 React/Redux/GraphQL/ReactNative kur.

https://tr.reactjs.org/
https://medium.com/search?q=react
https://www.c-sharpcorner.com/article/react-material-ui-expansion-panel-and-dialogs/


https://github.com/facebook/create-react-app

Not: Angulardaki two way binding react da yok. Başka bir yol ile bu çözülebilir.redux kullanılabilr.

jsx = javascript içinde html kullanmamızı sağlar.genelde bir tane parent elemen döner örneğin div. herşeyi bu div içinde yapacağız.
örnek: js fonksiyonundaki returnde dikkat edersek jsx yapısı var return parantez içinde html tagları mevcut.film burada başlıyor.
function App() {
  return (
    <div>
      <h2> Merhaba Yağmur AYDIN</h2>
    </div>
  );
}

redux = state yönetimi için kullanılır.

#npm i -g create-react-app ile bilgisayarımıza REACT kurulur. linux da başına sudo koymayı unutma.

--yeni proje oluşturmak.--
#create-react-app projeadı yada bir klasör aç içine gir #create-react-app .
#npx create-react-app intro

--projeyi çalıştırmak--
#npm start

--event yakalamak --
e yada event parametresi ile yakalarız.
onClickEvent(e) {}
arrow function kullanmak tavsiye edilir.

Not: app.js içindeki componentler chield componentdir.app'ın çocuğudur.


--components--
üç tip component vardır. fonksiyonel, class, hooks component
src klasörüne sağ click new file örneğin Navi.js (Pascal Case standardına uy)
Dosyanın içindeyken rcc yazıp enter yapıyorsun. Bu bize bir class component oluşturdu.Bu es7 eklentisinden geliyor.
Dosyayı incelersek extends Component den gelmekte. export kelimeside c#,java daki public gibi.

--Reactstrap---
https://reactstrap.github.io/--
https://getbootstrap.com/docs/3.3/components/
https://www.telerik.com/kendo-react-ui/components/grid/get-started/
https://www.youtube.com/watch?v=rVYBlYQ-Eqg
https://fontawesome.com/
https://www.color-hex.com/

# npm install --save bootstrap
# npm install --save reactstrap react react-dom ile kur sonra index.js dosyasına gel.
import 'bootstrap/dist/css/bootstrap.min.css';
Not: reactstrep ve bootstrap her ikisinide kullanabilirsin.



--google maps--
npm install --save google-maps-react

--yeni js oluşturmak--
harita ekleyeceğim...
src içine yeni js dosyası oluştur. App.js e import et.örneğin adı MapContainer.js olsun.
en üste react import etmeyi unutma
import React from 'react';
import MapContainer from './MapsContainer';
app.js deki default gelen head taglarını yok et ve MapContainer tagını buraya ekle. <MapContainer/>

https://github.com/fullstackreact/google-maps-react

Eğer es7 react eklentisi kuruluysa yeni açtığız componentein içinde rcc yazıp tab tuşuna basarsak
yapıyı bize oluşturur.

jsx = javascript içinde html yazmamıza olanak tanıyan bir yapıdır.
es6 ve javasctipt iyi bilmek gerekiyor.


--style, css, bootstrap kullanımı--
<h4 style={{color:"blue"}}>merhaba</h4>
bootstrap için index.html'e cdn linkleri eklenir. Ama npm i bootstrap yapmak daha iyi.

--fonksiyonel component--
state konusunda daha iyi anlaşılacak. komponentimiz sabit olacaksa yada bir durum almayacaksa kullanılabilir.
rfc yazıp tab yaparsak otomatik format oluşur.projede navbar.js'e bak

Not: state ve props için artık constractora gerek yok.
Not: App componentini state için class componente geçir.
Not: Props ile bir fonksiyonda yollanabilir.

--Json Server--
https://www.npmjs.com/package/json-server
#npm install -g json-server
#json-server --watch db.json

--React lifecycle--
Not: Önce constractor() çalışır sonra render() çalışır
componentDidMount  -constructor ve render dan sonra çalışır. componenet yüklendikten sonra çalışır.içine fonksiyonlarımızı ekleriz.api isteleri buradan olabilir. Kısa yolu cdm
componentDidUpdate - alt componentler props,state ile etkilendiğinde çalışır. kısa yolu cdu
componentWillUnmount - component sayfadan kaldırılmadan önce çalışır.
componentWillUpdate
souldComponentUpdate - prop state değişimde cdu çalıştıktan sonra render çalışır.işte bu render dan bir tık önce çalışır.
                        Default true döner ve render çalışır. Eğer component güncellenmesin istersen false yapman lazım.
                        Kısa yolu shpu

--props--
propslar bir komponentden diğerine veri aktarmak için kullanılır.
impt yazıp taba basarsak import proptype otomatik eklenir.
maptest uygulamasında örnekler var.

--state--
Bir komponentin o anki durumunu gösteren, değişik propertylerden oluşan bir js objesidir.
Bir componentin o anki datasıdır.
örneğin: componente tıklanmışmı, görünürmü
sadece statei değişen component yenileniyor. setstate ile stateler değiştirilir.
Bir state başka bir komponente props ile gönderebiliriz.
2 yol var. birincisi constractor içinde tanımlamak diğeri class'ın en tepesinde tanımlama.
rcons yazıp tab tuşu ile otomatik oluşur.
Erişmek için
{this.state.test}

--contextapi--
Provider, Consumer dan oluşuyor. bir adet context.js oluşturuluyor.reactkendotest projesinde denedim.
Reducer= genel action tipine göre state'i değiştirecek işlemlerden sorumlu bir fonksiyondur.
Action=componentin içine hangi verilerin gönderileceğini hangi işlemlerin yapılacağını belirler.
Dispatch=Actionları context'e göndermekle göreveli bir fonksiyondur.PRovider state içinde bulunur.

--spread operator--
bir statei diğer stateye olduğu gibi aktarmak için kullanılır. 
Örnek:
state :{
  a:10,
  b:20,
  c:30
}

{
  ...state   //yani buraya a,b,c değerleri olduğu gibi gelir. Üç nokta ile oluyor.
}

--events--
örneğin onClick. Eventi yapalamak için e kullanacağız.
onClickEvent(e){

    }
<p onClick={this.onClickEvent}>Event testleri</p>
kendi yazdığımız metodlarda this undefined'dır.
<p onClick={this.onClickEvent.bind(this)}>Event testleri</p>
Burda bind(this) bizim metoda this'i erişebilir yapacak.
Ayrıca bind ile fonksiyonumuza değerde gönderebiliriz.
bind(this,34) alırkende 
onClickEvent = (number,e) => { console.log(number) }

--State yönetimi--
Daha küçük uygulamalar için props state. ama componentler çoğaldıkça sıkıtı olur.
Orta ölçekli uygulamalar için contextapi.Contextapi react ile default gelir. Büyük uygulamalar için redux
context.js oluştur. içinde provider(sağlayan) ve consumer(tüketici) yapısı kullacağız.
https://dev.to/washingtonsteven/reacts-new-context-api-and-actions-446o
https://reactjs.org/docs/context.html


--React Animation--
Reac Pose
https://popmotion.io/pose/
npm install react-pose --save

--Dinamik css vermek--
<div className="card" style={isVisible ? {backgroundColor : "#ffaeaf"} : null}>

--Unique id oluşturmak--
https://www.npmjs.com/package/uniqid

--json rest api--
https://jsonplaceholder.typicode.com/
https://my-json-server.typicode.com/
npm install -g json-server
json file oluştur.
json-server --watch db.json --port 3004
get,post vs istekleri için normalde fetch kullanılıyor. Ama axios daha basit gibi.
npm install axios --save
örnek:
componentDidMount= async () => {
	const response = await axios.get("http://localhost:3004/users");
	console.log(response);
}

--template literal--
Bir es6 yeteneğidir. AltGr + virule(,,) iki defa basılca oluşur. Araya değişkenden veri almak için kullanılır.
sayHello(name, age){
   console.log(`My name is ${name} and I am ${age}  years old.`)
}
sayHello('Onur',39) //Output->My name is Onur and I am 39 years old


--react router--
npm install react-router-dom --save
import {BrowserRouter as Router, Route,Switc} from "react-router-dom";
switch olmayan sayfalar için kullanılır.
örnek:
render() {
    return (
      <Router>
        <div className="container">
          <Route exact path="/" render = {
            () => {
              return <h3>Home Page</h3>
            }
          } />
          <Route exact path="/about" render = {
            () => {
              return <h3>About Page</h3>
            }
          } />
        </div>
      </Router>
      
    );
  }
}

--Küçük funct componentler aynı sayfada olabilir.---
bir class componentin içinde yapıyorsan export class ın üstüne importun altına ekle.

const Home = () => {
	return (
		<h3> Home page </h3>
	)
}
const About = () => {
	return (
		<h3> About page </h3>
	)
}
--Validation--


--------------------------------------------------
--react native kurulum--ios,android için--
https://facebook.github.io/react-native/
npm install -g react-native-cli
--yeni proje oluşturmak--
react-native init projeadi
--ios için--
react-native run-ios
bu arada derleme işlemleri yapılıyor,apple kullanıyorsan similator açılmalı.
derleme işlemi biraz uzun sürer
npm start
android studio kurmak gerekli.
--android çalıştırmak--
react-native run-android

--------------------------

